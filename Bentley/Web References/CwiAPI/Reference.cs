//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30128.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30128.1.
// 
#pragma warning disable 1591

namespace Bentley.CwiAPI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CwiAPIServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CwiAPIService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback authenticateRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback authenticateRequestWithBrandOperationCompleted;
        
        private System.Threading.SendOrPostCallback authenticateRequestAllCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerIdForBrandOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllRegionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllVehicleDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllVehicleDetailsForBrandOperationCompleted;
        
        private System.Threading.SendOrPostCallback getModelYearsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getModelYearsWithCustomizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllVehicleDetailsWithBrandOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemsForModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllPhoneDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTopFeatureResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMainFeatureResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAdditionalFeatureResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDistinctPhoneDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDistinctPhoneDetailsWithRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFinalCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQuickGuidesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTopFeatureResultsForCultureOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMainFeatureResultsForCultureOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAdditionalFeatureResultsForCultureOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQuickGuidesForCultureOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCultureIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDistinctPhoneDetailsForCultureOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDistinctPhoneDetailsAsPerDeviceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCommentsForCultureOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFinalCommentsForCultureOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCWITextOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCWITextForBrandOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemForVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemForBrandOperationCompleted;
        
        private System.Threading.SendOrPostCallback getModelForTestInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTopFRForCultureWthCmmntTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLogDetailsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CwiAPIService() {
            this.Url = global::Bentley.Properties.Settings.Default.Bentley_CwiAPI_CwiAPIService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event authenticateRequestCompletedEventHandler authenticateRequestCompleted;
        
        /// <remarks/>
        public event authenticateRequestWithBrandCompletedEventHandler authenticateRequestWithBrandCompleted;
        
        /// <remarks/>
        public event authenticateRequestAllCustomersCompletedEventHandler authenticateRequestAllCustomersCompleted;
        
        /// <remarks/>
        public event getCustomerIdForBrandCompletedEventHandler getCustomerIdForBrandCompleted;
        
        /// <remarks/>
        public event getAllRegionsCompletedEventHandler getAllRegionsCompleted;
        
        /// <remarks/>
        public event getAllVehicleDetailsCompletedEventHandler getAllVehicleDetailsCompleted;
        
        /// <remarks/>
        public event getAllVehicleDetailsForBrandCompletedEventHandler getAllVehicleDetailsForBrandCompleted;
        
        /// <remarks/>
        public event getModelYearsCompletedEventHandler getModelYearsCompleted;
        
        /// <remarks/>
        public event getModelYearsWithCustomizationCompletedEventHandler getModelYearsWithCustomizationCompleted;
        
        /// <remarks/>
        public event getAllVehicleDetailsWithBrandCompletedEventHandler getAllVehicleDetailsWithBrandCompleted;
        
        /// <remarks/>
        public event getSystemCompletedEventHandler getSystemCompleted;
        
        /// <remarks/>
        public event getSystemsForModelCompletedEventHandler getSystemsForModelCompleted;
        
        /// <remarks/>
        public event getAllPhoneDetailsCompletedEventHandler getAllPhoneDetailsCompleted;
        
        /// <remarks/>
        public event getTopFeatureResultsCompletedEventHandler getTopFeatureResultsCompleted;
        
        /// <remarks/>
        public event getMainFeatureResultsCompletedEventHandler getMainFeatureResultsCompleted;
        
        /// <remarks/>
        public event getAdditionalFeatureResultsCompletedEventHandler getAdditionalFeatureResultsCompleted;
        
        /// <remarks/>
        public event getDistinctPhoneDetailsCompletedEventHandler getDistinctPhoneDetailsCompleted;
        
        /// <remarks/>
        public event getDistinctPhoneDetailsWithRatingCompletedEventHandler getDistinctPhoneDetailsWithRatingCompleted;
        
        /// <remarks/>
        public event getCommentsCompletedEventHandler getCommentsCompleted;
        
        /// <remarks/>
        public event getFinalCommentsCompletedEventHandler getFinalCommentsCompleted;
        
        /// <remarks/>
        public event getQuickGuidesCompletedEventHandler getQuickGuidesCompleted;
        
        /// <remarks/>
        public event getTopFeatureResultsForCultureCompletedEventHandler getTopFeatureResultsForCultureCompleted;
        
        /// <remarks/>
        public event getMainFeatureResultsForCultureCompletedEventHandler getMainFeatureResultsForCultureCompleted;
        
        /// <remarks/>
        public event getAdditionalFeatureResultsForCultureCompletedEventHandler getAdditionalFeatureResultsForCultureCompleted;
        
        /// <remarks/>
        public event getQuickGuidesForCultureCompletedEventHandler getQuickGuidesForCultureCompleted;
        
        /// <remarks/>
        public event getCultureIdCompletedEventHandler getCultureIdCompleted;
        
        /// <remarks/>
        public event getDistinctPhoneDetailsForCultureCompletedEventHandler getDistinctPhoneDetailsForCultureCompleted;
        
        /// <remarks/>
        public event getDistinctPhoneDetailsAsPerDeviceTypeCompletedEventHandler getDistinctPhoneDetailsAsPerDeviceTypeCompleted;
        
        /// <remarks/>
        public event getCommentsForCultureCompletedEventHandler getCommentsForCultureCompleted;
        
        /// <remarks/>
        public event getFinalCommentsForCultureCompletedEventHandler getFinalCommentsForCultureCompleted;
        
        /// <remarks/>
        public event getCWITextCompletedEventHandler getCWITextCompleted;
        
        /// <remarks/>
        public event getCWITextForBrandCompletedEventHandler getCWITextForBrandCompleted;
        
        /// <remarks/>
        public event getSystemForVehicleCompletedEventHandler getSystemForVehicleCompleted;
        
        /// <remarks/>
        public event getSystemForBrandCompletedEventHandler getSystemForBrandCompleted;
        
        /// <remarks/>
        public event getModelForTestInstanceCompletedEventHandler getModelForTestInstanceCompleted;
        
        /// <remarks/>
        public event getTopFRForCultureWthCmmntTextCompletedEventHandler getTopFRForCultureWthCmmntTextCompleted;
        
        /// <remarks/>
        public event InsertLogDetailsCompletedEventHandler InsertLogDetailsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/authenticateRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string authenticateRequest(string username, string password) {
            object[] results = this.Invoke("authenticateRequest", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void authenticateRequestAsync(string username, string password) {
            this.authenticateRequestAsync(username, password, null);
        }
        
        /// <remarks/>
        public void authenticateRequestAsync(string username, string password, object userState) {
            if ((this.authenticateRequestOperationCompleted == null)) {
                this.authenticateRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticateRequestOperationCompleted);
            }
            this.InvokeAsync("authenticateRequest", new object[] {
                        username,
                        password}, this.authenticateRequestOperationCompleted, userState);
        }
        
        private void OnauthenticateRequestOperationCompleted(object arg) {
            if ((this.authenticateRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenticateRequestCompleted(this, new authenticateRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/authenticateRequestWithBrand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string authenticateRequestWithBrand(string username, string password) {
            object[] results = this.Invoke("authenticateRequestWithBrand", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void authenticateRequestWithBrandAsync(string username, string password) {
            this.authenticateRequestWithBrandAsync(username, password, null);
        }
        
        /// <remarks/>
        public void authenticateRequestWithBrandAsync(string username, string password, object userState) {
            if ((this.authenticateRequestWithBrandOperationCompleted == null)) {
                this.authenticateRequestWithBrandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticateRequestWithBrandOperationCompleted);
            }
            this.InvokeAsync("authenticateRequestWithBrand", new object[] {
                        username,
                        password}, this.authenticateRequestWithBrandOperationCompleted, userState);
        }
        
        private void OnauthenticateRequestWithBrandOperationCompleted(object arg) {
            if ((this.authenticateRequestWithBrandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenticateRequestWithBrandCompleted(this, new authenticateRequestWithBrandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/authenticateRequestAllCustomers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string authenticateRequestAllCustomers(string username, string password) {
            object[] results = this.Invoke("authenticateRequestAllCustomers", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void authenticateRequestAllCustomersAsync(string username, string password) {
            this.authenticateRequestAllCustomersAsync(username, password, null);
        }
        
        /// <remarks/>
        public void authenticateRequestAllCustomersAsync(string username, string password, object userState) {
            if ((this.authenticateRequestAllCustomersOperationCompleted == null)) {
                this.authenticateRequestAllCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticateRequestAllCustomersOperationCompleted);
            }
            this.InvokeAsync("authenticateRequestAllCustomers", new object[] {
                        username,
                        password}, this.authenticateRequestAllCustomersOperationCompleted, userState);
        }
        
        private void OnauthenticateRequestAllCustomersOperationCompleted(object arg) {
            if ((this.authenticateRequestAllCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenticateRequestAllCustomersCompleted(this, new authenticateRequestAllCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerIdForBrand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCustomerIdForBrand(string brandName) {
            object[] results = this.Invoke("getCustomerIdForBrand", new object[] {
                        brandName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerIdForBrandAsync(string brandName) {
            this.getCustomerIdForBrandAsync(brandName, null);
        }
        
        /// <remarks/>
        public void getCustomerIdForBrandAsync(string brandName, object userState) {
            if ((this.getCustomerIdForBrandOperationCompleted == null)) {
                this.getCustomerIdForBrandOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerIdForBrandOperationCompleted);
            }
            this.InvokeAsync("getCustomerIdForBrand", new object[] {
                        brandName}, this.getCustomerIdForBrandOperationCompleted, userState);
        }
        
        private void OngetCustomerIdForBrandOperationCompleted(object arg) {
            if ((this.getCustomerIdForBrandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerIdForBrandCompleted(this, new getCustomerIdForBrandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllRegions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAllRegions(int customerId) {
            object[] results = this.Invoke("getAllRegions", new object[] {
                        customerId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllRegionsAsync(int customerId) {
            this.getAllRegionsAsync(customerId, null);
        }
        
        /// <remarks/>
        public void getAllRegionsAsync(int customerId, object userState) {
            if ((this.getAllRegionsOperationCompleted == null)) {
                this.getAllRegionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllRegionsOperationCompleted);
            }
            this.InvokeAsync("getAllRegions", new object[] {
                        customerId}, this.getAllRegionsOperationCompleted, userState);
        }
        
        private void OngetAllRegionsOperationCompleted(object arg) {
            if ((this.getAllRegionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllRegionsCompleted(this, new getAllRegionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllVehicleDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAllVehicleDetails(int customerId) {
            object[] results = this.Invoke("getAllVehicleDetails", new object[] {
                        customerId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllVehicleDetailsAsync(int customerId) {
            this.getAllVehicleDetailsAsync(customerId, null);
        }
        
        /// <remarks/>
        public void getAllVehicleDetailsAsync(int customerId, object userState) {
            if ((this.getAllVehicleDetailsOperationCompleted == null)) {
                this.getAllVehicleDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllVehicleDetailsOperationCompleted);
            }
            this.InvokeAsync("getAllVehicleDetails", new object[] {
                        customerId}, this.getAllVehicleDetailsOperationCompleted, userState);
        }
        
        private void OngetAllVehicleDetailsOperationCompleted(object arg) {
            if ((this.getAllVehicleDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllVehicleDetailsCompleted(this, new getAllVehicleDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllVehicleDetailsForBrand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAllVehicleDetailsForBrand(int customerId, string brandName) {
            object[] results = this.Invoke("getAllVehicleDetailsForBrand", new object[] {
                        customerId,
                        brandName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllVehicleDetailsForBrandAsync(int customerId, string brandName) {
            this.getAllVehicleDetailsForBrandAsync(customerId, brandName, null);
        }
        
        /// <remarks/>
        public void getAllVehicleDetailsForBrandAsync(int customerId, string brandName, object userState) {
            if ((this.getAllVehicleDetailsForBrandOperationCompleted == null)) {
                this.getAllVehicleDetailsForBrandOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllVehicleDetailsForBrandOperationCompleted);
            }
            this.InvokeAsync("getAllVehicleDetailsForBrand", new object[] {
                        customerId,
                        brandName}, this.getAllVehicleDetailsForBrandOperationCompleted, userState);
        }
        
        private void OngetAllVehicleDetailsForBrandOperationCompleted(object arg) {
            if ((this.getAllVehicleDetailsForBrandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllVehicleDetailsForBrandCompleted(this, new getAllVehicleDetailsForBrandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getModelYears", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getModelYears(int modelId) {
            object[] results = this.Invoke("getModelYears", new object[] {
                        modelId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getModelYearsAsync(int modelId) {
            this.getModelYearsAsync(modelId, null);
        }
        
        /// <remarks/>
        public void getModelYearsAsync(int modelId, object userState) {
            if ((this.getModelYearsOperationCompleted == null)) {
                this.getModelYearsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetModelYearsOperationCompleted);
            }
            this.InvokeAsync("getModelYears", new object[] {
                        modelId}, this.getModelYearsOperationCompleted, userState);
        }
        
        private void OngetModelYearsOperationCompleted(object arg) {
            if ((this.getModelYearsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getModelYearsCompleted(this, new getModelYearsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getModelYearsWithCustomization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getModelYearsWithCustomization(int modelId) {
            object[] results = this.Invoke("getModelYearsWithCustomization", new object[] {
                        modelId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getModelYearsWithCustomizationAsync(int modelId) {
            this.getModelYearsWithCustomizationAsync(modelId, null);
        }
        
        /// <remarks/>
        public void getModelYearsWithCustomizationAsync(int modelId, object userState) {
            if ((this.getModelYearsWithCustomizationOperationCompleted == null)) {
                this.getModelYearsWithCustomizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetModelYearsWithCustomizationOperationCompleted);
            }
            this.InvokeAsync("getModelYearsWithCustomization", new object[] {
                        modelId}, this.getModelYearsWithCustomizationOperationCompleted, userState);
        }
        
        private void OngetModelYearsWithCustomizationOperationCompleted(object arg) {
            if ((this.getModelYearsWithCustomizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getModelYearsWithCustomizationCompleted(this, new getModelYearsWithCustomizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllVehicleDetailsWithBrand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAllVehicleDetailsWithBrand(int brandId) {
            object[] results = this.Invoke("getAllVehicleDetailsWithBrand", new object[] {
                        brandId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllVehicleDetailsWithBrandAsync(int brandId) {
            this.getAllVehicleDetailsWithBrandAsync(brandId, null);
        }
        
        /// <remarks/>
        public void getAllVehicleDetailsWithBrandAsync(int brandId, object userState) {
            if ((this.getAllVehicleDetailsWithBrandOperationCompleted == null)) {
                this.getAllVehicleDetailsWithBrandOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllVehicleDetailsWithBrandOperationCompleted);
            }
            this.InvokeAsync("getAllVehicleDetailsWithBrand", new object[] {
                        brandId}, this.getAllVehicleDetailsWithBrandOperationCompleted, userState);
        }
        
        private void OngetAllVehicleDetailsWithBrandOperationCompleted(object arg) {
            if ((this.getAllVehicleDetailsWithBrandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllVehicleDetailsWithBrandCompleted(this, new getAllVehicleDetailsWithBrandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSystem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSystem(int modelId, string modelYear, int regionId) {
            object[] results = this.Invoke("getSystem", new object[] {
                        modelId,
                        modelYear,
                        regionId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSystemAsync(int modelId, string modelYear, int regionId) {
            this.getSystemAsync(modelId, modelYear, regionId, null);
        }
        
        /// <remarks/>
        public void getSystemAsync(int modelId, string modelYear, int regionId, object userState) {
            if ((this.getSystemOperationCompleted == null)) {
                this.getSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemOperationCompleted);
            }
            this.InvokeAsync("getSystem", new object[] {
                        modelId,
                        modelYear,
                        regionId}, this.getSystemOperationCompleted, userState);
        }
        
        private void OngetSystemOperationCompleted(object arg) {
            if ((this.getSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemCompleted(this, new getSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSystemsForModel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSystemsForModel(int modelId, string modelYear) {
            object[] results = this.Invoke("getSystemsForModel", new object[] {
                        modelId,
                        modelYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSystemsForModelAsync(int modelId, string modelYear) {
            this.getSystemsForModelAsync(modelId, modelYear, null);
        }
        
        /// <remarks/>
        public void getSystemsForModelAsync(int modelId, string modelYear, object userState) {
            if ((this.getSystemsForModelOperationCompleted == null)) {
                this.getSystemsForModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemsForModelOperationCompleted);
            }
            this.InvokeAsync("getSystemsForModel", new object[] {
                        modelId,
                        modelYear}, this.getSystemsForModelOperationCompleted, userState);
        }
        
        private void OngetSystemsForModelOperationCompleted(object arg) {
            if ((this.getSystemsForModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemsForModelCompleted(this, new getSystemsForModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllPhoneDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAllPhoneDetails(string SystemIds) {
            object[] results = this.Invoke("getAllPhoneDetails", new object[] {
                        SystemIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllPhoneDetailsAsync(string SystemIds) {
            this.getAllPhoneDetailsAsync(SystemIds, null);
        }
        
        /// <remarks/>
        public void getAllPhoneDetailsAsync(string SystemIds, object userState) {
            if ((this.getAllPhoneDetailsOperationCompleted == null)) {
                this.getAllPhoneDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllPhoneDetailsOperationCompleted);
            }
            this.InvokeAsync("getAllPhoneDetails", new object[] {
                        SystemIds}, this.getAllPhoneDetailsOperationCompleted, userState);
        }
        
        private void OngetAllPhoneDetailsOperationCompleted(object arg) {
            if ((this.getAllPhoneDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllPhoneDetailsCompleted(this, new getAllPhoneDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTopFeatureResults", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTopFeatureResults(int testInstanceId) {
            object[] results = this.Invoke("getTopFeatureResults", new object[] {
                        testInstanceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTopFeatureResultsAsync(int testInstanceId) {
            this.getTopFeatureResultsAsync(testInstanceId, null);
        }
        
        /// <remarks/>
        public void getTopFeatureResultsAsync(int testInstanceId, object userState) {
            if ((this.getTopFeatureResultsOperationCompleted == null)) {
                this.getTopFeatureResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTopFeatureResultsOperationCompleted);
            }
            this.InvokeAsync("getTopFeatureResults", new object[] {
                        testInstanceId}, this.getTopFeatureResultsOperationCompleted, userState);
        }
        
        private void OngetTopFeatureResultsOperationCompleted(object arg) {
            if ((this.getTopFeatureResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTopFeatureResultsCompleted(this, new getTopFeatureResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMainFeatureResults", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getMainFeatureResults(int testInstanceId) {
            object[] results = this.Invoke("getMainFeatureResults", new object[] {
                        testInstanceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMainFeatureResultsAsync(int testInstanceId) {
            this.getMainFeatureResultsAsync(testInstanceId, null);
        }
        
        /// <remarks/>
        public void getMainFeatureResultsAsync(int testInstanceId, object userState) {
            if ((this.getMainFeatureResultsOperationCompleted == null)) {
                this.getMainFeatureResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMainFeatureResultsOperationCompleted);
            }
            this.InvokeAsync("getMainFeatureResults", new object[] {
                        testInstanceId}, this.getMainFeatureResultsOperationCompleted, userState);
        }
        
        private void OngetMainFeatureResultsOperationCompleted(object arg) {
            if ((this.getMainFeatureResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMainFeatureResultsCompleted(this, new getMainFeatureResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAdditionalFeatureResults", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAdditionalFeatureResults(int testInstanceId) {
            object[] results = this.Invoke("getAdditionalFeatureResults", new object[] {
                        testInstanceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAdditionalFeatureResultsAsync(int testInstanceId) {
            this.getAdditionalFeatureResultsAsync(testInstanceId, null);
        }
        
        /// <remarks/>
        public void getAdditionalFeatureResultsAsync(int testInstanceId, object userState) {
            if ((this.getAdditionalFeatureResultsOperationCompleted == null)) {
                this.getAdditionalFeatureResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAdditionalFeatureResultsOperationCompleted);
            }
            this.InvokeAsync("getAdditionalFeatureResults", new object[] {
                        testInstanceId}, this.getAdditionalFeatureResultsOperationCompleted, userState);
        }
        
        private void OngetAdditionalFeatureResultsOperationCompleted(object arg) {
            if ((this.getAdditionalFeatureResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAdditionalFeatureResultsCompleted(this, new getAdditionalFeatureResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDistinctPhoneDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDistinctPhoneDetails(string SystemIds) {
            object[] results = this.Invoke("getDistinctPhoneDetails", new object[] {
                        SystemIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDistinctPhoneDetailsAsync(string SystemIds) {
            this.getDistinctPhoneDetailsAsync(SystemIds, null);
        }
        
        /// <remarks/>
        public void getDistinctPhoneDetailsAsync(string SystemIds, object userState) {
            if ((this.getDistinctPhoneDetailsOperationCompleted == null)) {
                this.getDistinctPhoneDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDistinctPhoneDetailsOperationCompleted);
            }
            this.InvokeAsync("getDistinctPhoneDetails", new object[] {
                        SystemIds}, this.getDistinctPhoneDetailsOperationCompleted, userState);
        }
        
        private void OngetDistinctPhoneDetailsOperationCompleted(object arg) {
            if ((this.getDistinctPhoneDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDistinctPhoneDetailsCompleted(this, new getDistinctPhoneDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDistinctPhoneDetailsWithRating", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDistinctPhoneDetailsWithRating(string SystemIds) {
            object[] results = this.Invoke("getDistinctPhoneDetailsWithRating", new object[] {
                        SystemIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDistinctPhoneDetailsWithRatingAsync(string SystemIds) {
            this.getDistinctPhoneDetailsWithRatingAsync(SystemIds, null);
        }
        
        /// <remarks/>
        public void getDistinctPhoneDetailsWithRatingAsync(string SystemIds, object userState) {
            if ((this.getDistinctPhoneDetailsWithRatingOperationCompleted == null)) {
                this.getDistinctPhoneDetailsWithRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDistinctPhoneDetailsWithRatingOperationCompleted);
            }
            this.InvokeAsync("getDistinctPhoneDetailsWithRating", new object[] {
                        SystemIds}, this.getDistinctPhoneDetailsWithRatingOperationCompleted, userState);
        }
        
        private void OngetDistinctPhoneDetailsWithRatingOperationCompleted(object arg) {
            if ((this.getDistinctPhoneDetailsWithRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDistinctPhoneDetailsWithRatingCompleted(this, new getDistinctPhoneDetailsWithRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getComments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getComments(int testInstanceId) {
            object[] results = this.Invoke("getComments", new object[] {
                        testInstanceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCommentsAsync(int testInstanceId) {
            this.getCommentsAsync(testInstanceId, null);
        }
        
        /// <remarks/>
        public void getCommentsAsync(int testInstanceId, object userState) {
            if ((this.getCommentsOperationCompleted == null)) {
                this.getCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCommentsOperationCompleted);
            }
            this.InvokeAsync("getComments", new object[] {
                        testInstanceId}, this.getCommentsOperationCompleted, userState);
        }
        
        private void OngetCommentsOperationCompleted(object arg) {
            if ((this.getCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCommentsCompleted(this, new getCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFinalComments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getFinalComments(int testInstanceId) {
            object[] results = this.Invoke("getFinalComments", new object[] {
                        testInstanceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFinalCommentsAsync(int testInstanceId) {
            this.getFinalCommentsAsync(testInstanceId, null);
        }
        
        /// <remarks/>
        public void getFinalCommentsAsync(int testInstanceId, object userState) {
            if ((this.getFinalCommentsOperationCompleted == null)) {
                this.getFinalCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFinalCommentsOperationCompleted);
            }
            this.InvokeAsync("getFinalComments", new object[] {
                        testInstanceId}, this.getFinalCommentsOperationCompleted, userState);
        }
        
        private void OngetFinalCommentsOperationCompleted(object arg) {
            if ((this.getFinalCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFinalCommentsCompleted(this, new getFinalCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getQuickGuides", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getQuickGuides(int SystemId, int PhoneId) {
            object[] results = this.Invoke("getQuickGuides", new object[] {
                        SystemId,
                        PhoneId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getQuickGuidesAsync(int SystemId, int PhoneId) {
            this.getQuickGuidesAsync(SystemId, PhoneId, null);
        }
        
        /// <remarks/>
        public void getQuickGuidesAsync(int SystemId, int PhoneId, object userState) {
            if ((this.getQuickGuidesOperationCompleted == null)) {
                this.getQuickGuidesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQuickGuidesOperationCompleted);
            }
            this.InvokeAsync("getQuickGuides", new object[] {
                        SystemId,
                        PhoneId}, this.getQuickGuidesOperationCompleted, userState);
        }
        
        private void OngetQuickGuidesOperationCompleted(object arg) {
            if ((this.getQuickGuidesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQuickGuidesCompleted(this, new getQuickGuidesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTopFeatureResultsForCulture", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTopFeatureResultsForCulture(int testInstanceId, int cultureId) {
            object[] results = this.Invoke("getTopFeatureResultsForCulture", new object[] {
                        testInstanceId,
                        cultureId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTopFeatureResultsForCultureAsync(int testInstanceId, int cultureId) {
            this.getTopFeatureResultsForCultureAsync(testInstanceId, cultureId, null);
        }
        
        /// <remarks/>
        public void getTopFeatureResultsForCultureAsync(int testInstanceId, int cultureId, object userState) {
            if ((this.getTopFeatureResultsForCultureOperationCompleted == null)) {
                this.getTopFeatureResultsForCultureOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTopFeatureResultsForCultureOperationCompleted);
            }
            this.InvokeAsync("getTopFeatureResultsForCulture", new object[] {
                        testInstanceId,
                        cultureId}, this.getTopFeatureResultsForCultureOperationCompleted, userState);
        }
        
        private void OngetTopFeatureResultsForCultureOperationCompleted(object arg) {
            if ((this.getTopFeatureResultsForCultureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTopFeatureResultsForCultureCompleted(this, new getTopFeatureResultsForCultureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMainFeatureResultsForCulture", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getMainFeatureResultsForCulture(int testInstanceId, int cultureId) {
            object[] results = this.Invoke("getMainFeatureResultsForCulture", new object[] {
                        testInstanceId,
                        cultureId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMainFeatureResultsForCultureAsync(int testInstanceId, int cultureId) {
            this.getMainFeatureResultsForCultureAsync(testInstanceId, cultureId, null);
        }
        
        /// <remarks/>
        public void getMainFeatureResultsForCultureAsync(int testInstanceId, int cultureId, object userState) {
            if ((this.getMainFeatureResultsForCultureOperationCompleted == null)) {
                this.getMainFeatureResultsForCultureOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMainFeatureResultsForCultureOperationCompleted);
            }
            this.InvokeAsync("getMainFeatureResultsForCulture", new object[] {
                        testInstanceId,
                        cultureId}, this.getMainFeatureResultsForCultureOperationCompleted, userState);
        }
        
        private void OngetMainFeatureResultsForCultureOperationCompleted(object arg) {
            if ((this.getMainFeatureResultsForCultureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMainFeatureResultsForCultureCompleted(this, new getMainFeatureResultsForCultureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAdditionalFeatureResultsForCulture", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAdditionalFeatureResultsForCulture(int testInstanceId, int cultureId) {
            object[] results = this.Invoke("getAdditionalFeatureResultsForCulture", new object[] {
                        testInstanceId,
                        cultureId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAdditionalFeatureResultsForCultureAsync(int testInstanceId, int cultureId) {
            this.getAdditionalFeatureResultsForCultureAsync(testInstanceId, cultureId, null);
        }
        
        /// <remarks/>
        public void getAdditionalFeatureResultsForCultureAsync(int testInstanceId, int cultureId, object userState) {
            if ((this.getAdditionalFeatureResultsForCultureOperationCompleted == null)) {
                this.getAdditionalFeatureResultsForCultureOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAdditionalFeatureResultsForCultureOperationCompleted);
            }
            this.InvokeAsync("getAdditionalFeatureResultsForCulture", new object[] {
                        testInstanceId,
                        cultureId}, this.getAdditionalFeatureResultsForCultureOperationCompleted, userState);
        }
        
        private void OngetAdditionalFeatureResultsForCultureOperationCompleted(object arg) {
            if ((this.getAdditionalFeatureResultsForCultureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAdditionalFeatureResultsForCultureCompleted(this, new getAdditionalFeatureResultsForCultureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getQuickGuidesForCulture", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getQuickGuidesForCulture(int SystemId, int PhoneID, int cultureId) {
            object[] results = this.Invoke("getQuickGuidesForCulture", new object[] {
                        SystemId,
                        PhoneID,
                        cultureId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getQuickGuidesForCultureAsync(int SystemId, int PhoneID, int cultureId) {
            this.getQuickGuidesForCultureAsync(SystemId, PhoneID, cultureId, null);
        }
        
        /// <remarks/>
        public void getQuickGuidesForCultureAsync(int SystemId, int PhoneID, int cultureId, object userState) {
            if ((this.getQuickGuidesForCultureOperationCompleted == null)) {
                this.getQuickGuidesForCultureOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQuickGuidesForCultureOperationCompleted);
            }
            this.InvokeAsync("getQuickGuidesForCulture", new object[] {
                        SystemId,
                        PhoneID,
                        cultureId}, this.getQuickGuidesForCultureOperationCompleted, userState);
        }
        
        private void OngetQuickGuidesForCultureOperationCompleted(object arg) {
            if ((this.getQuickGuidesForCultureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQuickGuidesForCultureCompleted(this, new getQuickGuidesForCultureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCultureId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCultureId(string languageCode) {
            object[] results = this.Invoke("getCultureId", new object[] {
                        languageCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCultureIdAsync(string languageCode) {
            this.getCultureIdAsync(languageCode, null);
        }
        
        /// <remarks/>
        public void getCultureIdAsync(string languageCode, object userState) {
            if ((this.getCultureIdOperationCompleted == null)) {
                this.getCultureIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCultureIdOperationCompleted);
            }
            this.InvokeAsync("getCultureId", new object[] {
                        languageCode}, this.getCultureIdOperationCompleted, userState);
        }
        
        private void OngetCultureIdOperationCompleted(object arg) {
            if ((this.getCultureIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCultureIdCompleted(this, new getCultureIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDistinctPhoneDetailsForCulture", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDistinctPhoneDetailsForCulture(string SystemIds, int cultureId) {
            object[] results = this.Invoke("getDistinctPhoneDetailsForCulture", new object[] {
                        SystemIds,
                        cultureId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDistinctPhoneDetailsForCultureAsync(string SystemIds, int cultureId) {
            this.getDistinctPhoneDetailsForCultureAsync(SystemIds, cultureId, null);
        }
        
        /// <remarks/>
        public void getDistinctPhoneDetailsForCultureAsync(string SystemIds, int cultureId, object userState) {
            if ((this.getDistinctPhoneDetailsForCultureOperationCompleted == null)) {
                this.getDistinctPhoneDetailsForCultureOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDistinctPhoneDetailsForCultureOperationCompleted);
            }
            this.InvokeAsync("getDistinctPhoneDetailsForCulture", new object[] {
                        SystemIds,
                        cultureId}, this.getDistinctPhoneDetailsForCultureOperationCompleted, userState);
        }
        
        private void OngetDistinctPhoneDetailsForCultureOperationCompleted(object arg) {
            if ((this.getDistinctPhoneDetailsForCultureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDistinctPhoneDetailsForCultureCompleted(this, new getDistinctPhoneDetailsForCultureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDistinctPhoneDetailsAsPerDeviceType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDistinctPhoneDetailsAsPerDeviceType(string SystemIds) {
            object[] results = this.Invoke("getDistinctPhoneDetailsAsPerDeviceType", new object[] {
                        SystemIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDistinctPhoneDetailsAsPerDeviceTypeAsync(string SystemIds) {
            this.getDistinctPhoneDetailsAsPerDeviceTypeAsync(SystemIds, null);
        }
        
        /// <remarks/>
        public void getDistinctPhoneDetailsAsPerDeviceTypeAsync(string SystemIds, object userState) {
            if ((this.getDistinctPhoneDetailsAsPerDeviceTypeOperationCompleted == null)) {
                this.getDistinctPhoneDetailsAsPerDeviceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDistinctPhoneDetailsAsPerDeviceTypeOperationCompleted);
            }
            this.InvokeAsync("getDistinctPhoneDetailsAsPerDeviceType", new object[] {
                        SystemIds}, this.getDistinctPhoneDetailsAsPerDeviceTypeOperationCompleted, userState);
        }
        
        private void OngetDistinctPhoneDetailsAsPerDeviceTypeOperationCompleted(object arg) {
            if ((this.getDistinctPhoneDetailsAsPerDeviceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDistinctPhoneDetailsAsPerDeviceTypeCompleted(this, new getDistinctPhoneDetailsAsPerDeviceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCommentsForCulture", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCommentsForCulture(int testInstanceId, int cultureId) {
            object[] results = this.Invoke("getCommentsForCulture", new object[] {
                        testInstanceId,
                        cultureId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCommentsForCultureAsync(int testInstanceId, int cultureId) {
            this.getCommentsForCultureAsync(testInstanceId, cultureId, null);
        }
        
        /// <remarks/>
        public void getCommentsForCultureAsync(int testInstanceId, int cultureId, object userState) {
            if ((this.getCommentsForCultureOperationCompleted == null)) {
                this.getCommentsForCultureOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCommentsForCultureOperationCompleted);
            }
            this.InvokeAsync("getCommentsForCulture", new object[] {
                        testInstanceId,
                        cultureId}, this.getCommentsForCultureOperationCompleted, userState);
        }
        
        private void OngetCommentsForCultureOperationCompleted(object arg) {
            if ((this.getCommentsForCultureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCommentsForCultureCompleted(this, new getCommentsForCultureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFinalCommentsForCulture", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getFinalCommentsForCulture(int testInstanceId, int cultureId) {
            object[] results = this.Invoke("getFinalCommentsForCulture", new object[] {
                        testInstanceId,
                        cultureId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFinalCommentsForCultureAsync(int testInstanceId, int cultureId) {
            this.getFinalCommentsForCultureAsync(testInstanceId, cultureId, null);
        }
        
        /// <remarks/>
        public void getFinalCommentsForCultureAsync(int testInstanceId, int cultureId, object userState) {
            if ((this.getFinalCommentsForCultureOperationCompleted == null)) {
                this.getFinalCommentsForCultureOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFinalCommentsForCultureOperationCompleted);
            }
            this.InvokeAsync("getFinalCommentsForCulture", new object[] {
                        testInstanceId,
                        cultureId}, this.getFinalCommentsForCultureOperationCompleted, userState);
        }
        
        private void OngetFinalCommentsForCultureOperationCompleted(object arg) {
            if ((this.getFinalCommentsForCultureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFinalCommentsForCultureCompleted(this, new getFinalCommentsForCultureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCWIText", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCWIText(int customerId, string brandName, int cultureId) {
            object[] results = this.Invoke("getCWIText", new object[] {
                        customerId,
                        brandName,
                        cultureId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCWITextAsync(int customerId, string brandName, int cultureId) {
            this.getCWITextAsync(customerId, brandName, cultureId, null);
        }
        
        /// <remarks/>
        public void getCWITextAsync(int customerId, string brandName, int cultureId, object userState) {
            if ((this.getCWITextOperationCompleted == null)) {
                this.getCWITextOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCWITextOperationCompleted);
            }
            this.InvokeAsync("getCWIText", new object[] {
                        customerId,
                        brandName,
                        cultureId}, this.getCWITextOperationCompleted, userState);
        }
        
        private void OngetCWITextOperationCompleted(object arg) {
            if ((this.getCWITextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCWITextCompleted(this, new getCWITextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCWITextForBrand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCWITextForBrand(int brandId, int cultureId) {
            object[] results = this.Invoke("getCWITextForBrand", new object[] {
                        brandId,
                        cultureId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCWITextForBrandAsync(int brandId, int cultureId) {
            this.getCWITextForBrandAsync(brandId, cultureId, null);
        }
        
        /// <remarks/>
        public void getCWITextForBrandAsync(int brandId, int cultureId, object userState) {
            if ((this.getCWITextForBrandOperationCompleted == null)) {
                this.getCWITextForBrandOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCWITextForBrandOperationCompleted);
            }
            this.InvokeAsync("getCWITextForBrand", new object[] {
                        brandId,
                        cultureId}, this.getCWITextForBrandOperationCompleted, userState);
        }
        
        private void OngetCWITextForBrandOperationCompleted(object arg) {
            if ((this.getCWITextForBrandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCWITextForBrandCompleted(this, new getCWITextForBrandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSystemForVehicle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSystemForVehicle(int vehicleId) {
            object[] results = this.Invoke("getSystemForVehicle", new object[] {
                        vehicleId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSystemForVehicleAsync(int vehicleId) {
            this.getSystemForVehicleAsync(vehicleId, null);
        }
        
        /// <remarks/>
        public void getSystemForVehicleAsync(int vehicleId, object userState) {
            if ((this.getSystemForVehicleOperationCompleted == null)) {
                this.getSystemForVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemForVehicleOperationCompleted);
            }
            this.InvokeAsync("getSystemForVehicle", new object[] {
                        vehicleId}, this.getSystemForVehicleOperationCompleted, userState);
        }
        
        private void OngetSystemForVehicleOperationCompleted(object arg) {
            if ((this.getSystemForVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemForVehicleCompleted(this, new getSystemForVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSystemForBrand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSystemForBrand(int brandid) {
            object[] results = this.Invoke("getSystemForBrand", new object[] {
                        brandid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSystemForBrandAsync(int brandid) {
            this.getSystemForBrandAsync(brandid, null);
        }
        
        /// <remarks/>
        public void getSystemForBrandAsync(int brandid, object userState) {
            if ((this.getSystemForBrandOperationCompleted == null)) {
                this.getSystemForBrandOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemForBrandOperationCompleted);
            }
            this.InvokeAsync("getSystemForBrand", new object[] {
                        brandid}, this.getSystemForBrandOperationCompleted, userState);
        }
        
        private void OngetSystemForBrandOperationCompleted(object arg) {
            if ((this.getSystemForBrandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemForBrandCompleted(this, new getSystemForBrandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getModelForTestInstance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getModelForTestInstance(int testInstanceId) {
            object[] results = this.Invoke("getModelForTestInstance", new object[] {
                        testInstanceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getModelForTestInstanceAsync(int testInstanceId) {
            this.getModelForTestInstanceAsync(testInstanceId, null);
        }
        
        /// <remarks/>
        public void getModelForTestInstanceAsync(int testInstanceId, object userState) {
            if ((this.getModelForTestInstanceOperationCompleted == null)) {
                this.getModelForTestInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetModelForTestInstanceOperationCompleted);
            }
            this.InvokeAsync("getModelForTestInstance", new object[] {
                        testInstanceId}, this.getModelForTestInstanceOperationCompleted, userState);
        }
        
        private void OngetModelForTestInstanceOperationCompleted(object arg) {
            if ((this.getModelForTestInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getModelForTestInstanceCompleted(this, new getModelForTestInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTopFRForCultureWthCmmntText", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getTopFRForCultureWthCmmntText(int testInstanceId, int cultureId) {
            object[] results = this.Invoke("getTopFRForCultureWthCmmntText", new object[] {
                        testInstanceId,
                        cultureId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTopFRForCultureWthCmmntTextAsync(int testInstanceId, int cultureId) {
            this.getTopFRForCultureWthCmmntTextAsync(testInstanceId, cultureId, null);
        }
        
        /// <remarks/>
        public void getTopFRForCultureWthCmmntTextAsync(int testInstanceId, int cultureId, object userState) {
            if ((this.getTopFRForCultureWthCmmntTextOperationCompleted == null)) {
                this.getTopFRForCultureWthCmmntTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTopFRForCultureWthCmmntTextOperationCompleted);
            }
            this.InvokeAsync("getTopFRForCultureWthCmmntText", new object[] {
                        testInstanceId,
                        cultureId}, this.getTopFRForCultureWthCmmntTextOperationCompleted, userState);
        }
        
        private void OngetTopFRForCultureWthCmmntTextOperationCompleted(object arg) {
            if ((this.getTopFRForCultureWthCmmntTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTopFRForCultureWthCmmntTextCompleted(this, new getTopFRForCultureWthCmmntTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertLogDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertLogDetails(int VehicleID, int PageID, System.DateTime dateAndTime, int cultureId, int testInstanceID) {
            this.Invoke("InsertLogDetails", new object[] {
                        VehicleID,
                        PageID,
                        dateAndTime,
                        cultureId,
                        testInstanceID});
        }
        
        /// <remarks/>
        public void InsertLogDetailsAsync(int VehicleID, int PageID, System.DateTime dateAndTime, int cultureId, int testInstanceID) {
            this.InsertLogDetailsAsync(VehicleID, PageID, dateAndTime, cultureId, testInstanceID, null);
        }
        
        /// <remarks/>
        public void InsertLogDetailsAsync(int VehicleID, int PageID, System.DateTime dateAndTime, int cultureId, int testInstanceID, object userState) {
            if ((this.InsertLogDetailsOperationCompleted == null)) {
                this.InsertLogDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLogDetailsOperationCompleted);
            }
            this.InvokeAsync("InsertLogDetails", new object[] {
                        VehicleID,
                        PageID,
                        dateAndTime,
                        cultureId,
                        testInstanceID}, this.InsertLogDetailsOperationCompleted, userState);
        }
        
        private void OnInsertLogDetailsOperationCompleted(object arg) {
            if ((this.InsertLogDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLogDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void authenticateRequestCompletedEventHandler(object sender, authenticateRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenticateRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal authenticateRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void authenticateRequestWithBrandCompletedEventHandler(object sender, authenticateRequestWithBrandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenticateRequestWithBrandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal authenticateRequestWithBrandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void authenticateRequestAllCustomersCompletedEventHandler(object sender, authenticateRequestAllCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenticateRequestAllCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal authenticateRequestAllCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getCustomerIdForBrandCompletedEventHandler(object sender, getCustomerIdForBrandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerIdForBrandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerIdForBrandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getAllRegionsCompletedEventHandler(object sender, getAllRegionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllRegionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllRegionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getAllVehicleDetailsCompletedEventHandler(object sender, getAllVehicleDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllVehicleDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllVehicleDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getAllVehicleDetailsForBrandCompletedEventHandler(object sender, getAllVehicleDetailsForBrandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllVehicleDetailsForBrandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllVehicleDetailsForBrandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getModelYearsCompletedEventHandler(object sender, getModelYearsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getModelYearsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getModelYearsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getModelYearsWithCustomizationCompletedEventHandler(object sender, getModelYearsWithCustomizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getModelYearsWithCustomizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getModelYearsWithCustomizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getAllVehicleDetailsWithBrandCompletedEventHandler(object sender, getAllVehicleDetailsWithBrandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllVehicleDetailsWithBrandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllVehicleDetailsWithBrandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getSystemCompletedEventHandler(object sender, getSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getSystemsForModelCompletedEventHandler(object sender, getSystemsForModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemsForModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemsForModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getAllPhoneDetailsCompletedEventHandler(object sender, getAllPhoneDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllPhoneDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllPhoneDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getTopFeatureResultsCompletedEventHandler(object sender, getTopFeatureResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTopFeatureResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTopFeatureResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getMainFeatureResultsCompletedEventHandler(object sender, getMainFeatureResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMainFeatureResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMainFeatureResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getAdditionalFeatureResultsCompletedEventHandler(object sender, getAdditionalFeatureResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAdditionalFeatureResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAdditionalFeatureResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getDistinctPhoneDetailsCompletedEventHandler(object sender, getDistinctPhoneDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDistinctPhoneDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDistinctPhoneDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getDistinctPhoneDetailsWithRatingCompletedEventHandler(object sender, getDistinctPhoneDetailsWithRatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDistinctPhoneDetailsWithRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDistinctPhoneDetailsWithRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getCommentsCompletedEventHandler(object sender, getCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getFinalCommentsCompletedEventHandler(object sender, getFinalCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFinalCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFinalCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getQuickGuidesCompletedEventHandler(object sender, getQuickGuidesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQuickGuidesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQuickGuidesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getTopFeatureResultsForCultureCompletedEventHandler(object sender, getTopFeatureResultsForCultureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTopFeatureResultsForCultureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTopFeatureResultsForCultureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getMainFeatureResultsForCultureCompletedEventHandler(object sender, getMainFeatureResultsForCultureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMainFeatureResultsForCultureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMainFeatureResultsForCultureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getAdditionalFeatureResultsForCultureCompletedEventHandler(object sender, getAdditionalFeatureResultsForCultureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAdditionalFeatureResultsForCultureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAdditionalFeatureResultsForCultureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getQuickGuidesForCultureCompletedEventHandler(object sender, getQuickGuidesForCultureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQuickGuidesForCultureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQuickGuidesForCultureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getCultureIdCompletedEventHandler(object sender, getCultureIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCultureIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCultureIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getDistinctPhoneDetailsForCultureCompletedEventHandler(object sender, getDistinctPhoneDetailsForCultureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDistinctPhoneDetailsForCultureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDistinctPhoneDetailsForCultureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getDistinctPhoneDetailsAsPerDeviceTypeCompletedEventHandler(object sender, getDistinctPhoneDetailsAsPerDeviceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDistinctPhoneDetailsAsPerDeviceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDistinctPhoneDetailsAsPerDeviceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getCommentsForCultureCompletedEventHandler(object sender, getCommentsForCultureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCommentsForCultureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCommentsForCultureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getFinalCommentsForCultureCompletedEventHandler(object sender, getFinalCommentsForCultureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFinalCommentsForCultureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFinalCommentsForCultureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getCWITextCompletedEventHandler(object sender, getCWITextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCWITextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCWITextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getCWITextForBrandCompletedEventHandler(object sender, getCWITextForBrandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCWITextForBrandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCWITextForBrandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getSystemForVehicleCompletedEventHandler(object sender, getSystemForVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemForVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemForVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getSystemForBrandCompletedEventHandler(object sender, getSystemForBrandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemForBrandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemForBrandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getModelForTestInstanceCompletedEventHandler(object sender, getModelForTestInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getModelForTestInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getModelForTestInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void getTopFRForCultureWthCmmntTextCompletedEventHandler(object sender, getTopFRForCultureWthCmmntTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTopFRForCultureWthCmmntTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTopFRForCultureWthCmmntTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void InsertLogDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591